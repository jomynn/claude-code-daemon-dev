<!DOCTYPE html>
<html lang="en" class="vscode-dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Claude Code Daemon - VS Code Edition</title>

    <!-- VS Code Theme CSS -->
    <link rel="stylesheet" href="/static/css/vscode-theme.css">

    <!-- Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@vscode/codicons@0.0.35/dist/codicon.css">

    <!-- Socket.IO -->
    <script src="/socket.io/socket.io.js"></script>

    <!-- Terminal -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/xterm@5.3.0/css/xterm.css">
    <script src="https://cdn.jsdelivr.net/npm/xterm@5.3.0/lib/xterm.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/xterm-addon-fit@0.8.0/lib/xterm-addon-fit.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/xterm-addon-web-links@0.9.0/lib/xterm-addon-web-links.js"></script>

    <!-- Monaco Editor -->
    <script src="https://cdn.jsdelivr.net/npm/monaco-editor@0.44.0/min/vs/loader.js"></script>
</head>
<body>
    <div class="vscode-container">
        <!-- Title Bar -->
        <div class="vscode-titlebar">
            <div class="title">Claude Code Daemon - <%= project ? project.name : 'No Project' %></div>
            <div class="window-controls">
                <button class="window-control" id="minimize-btn">
                    <i class="codicon codicon-chrome-minimize"></i>
                </button>
                <button class="window-control" id="maximize-btn">
                    <i class="codicon codicon-chrome-maximize"></i>
                </button>
                <button class="window-control" id="close-btn">
                    <i class="codicon codicon-close"></i>
                </button>
            </div>
        </div>

        <!-- Main Content -->
        <div class="vscode-main">
            <!-- Activity Bar -->
            <div class="vscode-activity-bar">
                <div class="activity-icon active" data-view="explorer" title="Explorer">
                    <i class="codicon codicon-files"></i>
                </div>
                <div class="activity-icon" data-view="search" title="Search">
                    <i class="codicon codicon-search"></i>
                </div>
                <div class="activity-icon" data-view="source-control" title="Source Control">
                    <i class="codicon codicon-source-control"></i>
                </div>
                <div class="activity-icon" data-view="debug" title="Run and Debug">
                    <i class="codicon codicon-debug-alt"></i>
                </div>
                <div class="activity-icon" data-view="extensions" title="Extensions">
                    <i class="codicon codicon-extensions"></i>
                </div>
                <div class="activity-icon" data-view="claude" title="Claude AI">
                    <i class="codicon codicon-hubot"></i>
                </div>
                <div style="flex: 1;"></div>
                <div class="activity-icon" data-view="settings" title="Settings">
                    <i class="codicon codicon-settings-gear"></i>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="vscode-sidebar" id="sidebar">
                <!-- Explorer View -->
                <div class="sidebar-view" id="explorer-view">
                    <div class="sidebar-header">
                        <span class="sidebar-title">EXPLORER</span>
                        <div class="sidebar-actions">
                            <button class="icon-button" title="New File">
                                <i class="codicon codicon-new-file"></i>
                            </button>
                            <button class="icon-button" title="New Folder">
                                <i class="codicon codicon-new-folder"></i>
                            </button>
                            <button class="icon-button" title="Refresh">
                                <i class="codicon codicon-refresh"></i>
                            </button>
                        </div>
                    </div>
                    <div class="sidebar-content">
                        <div class="file-tree" id="file-tree">
                            <!-- File tree will be populated here -->
                            <div class="file-item folder">
                                <i class="codicon codicon-folder"></i>
                                <span>src</span>
                            </div>
                            <div class="file-item file" style="margin-left: 20px;">
                                <i class="codicon codicon-file"></i>
                                <span>index.js</span>
                            </div>
                            <div class="file-item file" style="margin-left: 20px;">
                                <i class="codicon codicon-file"></i>
                                <span>app.js</span>
                            </div>
                            <div class="file-item file">
                                <i class="codicon codicon-file"></i>
                                <span>package.json</span>
                            </div>
                            <div class="file-item file">
                                <i class="codicon codicon-file"></i>
                                <span>README.md</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Claude AI View -->
                <div class="sidebar-view" id="claude-view" style="display: none;">
                    <div class="sidebar-header">
                        <span class="sidebar-title">CLAUDE AI ASSISTANT</span>
                    </div>
                    <div class="sidebar-content" style="padding: 10px;">
                        <div class="claude-chat-container">
                            <div class="chat-messages" id="claude-messages">
                                <div class="chat-message assistant">
                                    ðŸ‘‹ Hello! I'm Claude, your AI coding assistant. How can I help you today?
                                </div>
                            </div>
                            <div class="chat-input-container">
                                <textarea class="vscode-input" id="claude-input"
                                    placeholder="Ask Claude for help..."
                                    style="width: 100%; min-height: 60px; resize: vertical;"></textarea>
                                <div style="margin-top: 8px;">
                                    <button class="vscode-button" id="send-to-claude">Send</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Search View -->
                <div class="sidebar-view" id="search-view" style="display: none;">
                    <div class="sidebar-header">
                        <span class="sidebar-title">SEARCH</span>
                    </div>
                    <div class="sidebar-content" style="padding: 10px;">
                        <input type="text" class="vscode-input" placeholder="Search..." style="width: 100%; margin-bottom: 10px;">
                        <input type="text" class="vscode-input" placeholder="Replace..." style="width: 100%;">
                    </div>
                </div>

                <!-- Source Control View -->
                <div class="sidebar-view" id="source-control-view" style="display: none;">
                    <div class="sidebar-header">
                        <span class="sidebar-title">SOURCE CONTROL</span>
                    </div>
                    <div class="sidebar-content" style="padding: 10px;">
                        <p style="color: var(--vscode-text-secondary);">No source control providers registered.</p>
                    </div>
                </div>
            </div>

            <!-- Editor Area -->
            <div class="vscode-editor-area">
                <!-- Tabs -->
                <div class="vscode-tabs" id="editor-tabs">
                    <div class="tab active" data-file="welcome">
                        <i class="codicon codicon-file-code"></i>
                        <span class="tab-label">Welcome</span>
                        <span class="tab-close">
                            <i class="codicon codicon-close"></i>
                        </span>
                    </div>
                </div>

                <!-- Editor Content -->
                <div class="vscode-editor-content">
                    <div class="editor-container" id="editor-container">
                        <!-- Monaco editor will be inserted here -->
                        <div id="monaco-editor" style="width: 100%; height: 100%;"></div>
                    </div>
                </div>

                <!-- Terminal Panel -->
                <div class="vscode-panel" id="panel">
                    <div class="panel-header">
                        <div class="panel-tabs">
                            <button class="panel-tab active" data-panel="terminal">Terminal</button>
                            <button class="panel-tab" data-panel="problems">Problems</button>
                            <button class="panel-tab" data-panel="output">Output</button>
                            <button class="panel-tab" data-panel="debug-console">Debug Console</button>
                        </div>
                        <div style="flex: 1;"></div>
                        <div class="panel-actions">
                            <button class="icon-button" title="New Terminal">
                                <i class="codicon codicon-add"></i>
                            </button>
                            <button class="icon-button" title="Split Terminal">
                                <i class="codicon codicon-split-horizontal"></i>
                            </button>
                            <button class="icon-button" title="Kill Terminal">
                                <i class="codicon codicon-trash"></i>
                            </button>
                            <button class="icon-button" id="toggle-panel" title="Toggle Panel">
                                <i class="codicon codicon-chevron-down"></i>
                            </button>
                        </div>
                    </div>
                    <div class="panel-content">
                        <div id="terminal-container" style="width: 100%; height: 100%;"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Status Bar -->
        <div class="vscode-statusbar">
            <div class="statusbar-item">
                <i class="codicon codicon-remote"></i>
                <span>Claude Code Daemon</span>
            </div>
            <div class="statusbar-item">
                <i class="codicon codicon-git-branch"></i>
                <span id="git-branch">main</span>
            </div>
            <div style="flex: 1;"></div>
            <div class="statusbar-item" id="project-status">
                <i class="codicon codicon-folder"></i>
                <span><%= project ? project.name : 'No Project' %></span>
            </div>
            <div class="statusbar-item">
                <i class="codicon codicon-bell"></i>
            </div>
            <div class="statusbar-item">
                <span>UTF-8</span>
            </div>
            <div class="statusbar-item">
                <span>LF</span>
            </div>
            <div class="statusbar-item">
                <span>JavaScript</span>
            </div>
        </div>
    </div>

    <!-- VS Code Workspace JavaScript -->
    <script>
        // Initialize Monaco Editor
        require.config({ paths: { 'vs': 'https://cdn.jsdelivr.net/npm/monaco-editor@0.44.0/min/vs' }});

        require(['vs/editor/editor.main'], function() {
            // VS Code Dark Theme
            monaco.editor.defineTheme('vscode-dark', {
                base: 'vs-dark',
                inherit: true,
                rules: [
                    { token: 'comment', foreground: '6A9955' },
                    { token: 'keyword', foreground: '569CD6' },
                    { token: 'string', foreground: 'CE9178' },
                    { token: 'number', foreground: 'B5CEA8' },
                    { token: 'function', foreground: 'DCDCAA' },
                    { token: 'variable', foreground: '9CDCFE' },
                    { token: 'type', foreground: '4EC9B0' }
                ],
                colors: {
                    'editor.background': '#1E1E1E',
                    'editor.foreground': '#D4D4D4',
                    'editor.selectionBackground': '#264F78',
                    'editor.lineHighlightBackground': '#2A2A2A',
                    'editorCursor.foreground': '#FFFFFF',
                    'editorWhitespace.foreground': '#404040'
                }
            });

            // Create editor instance
            window.monacoEditor = monaco.editor.create(document.getElementById('monaco-editor'), {
                value: `// Welcome to Claude Code Daemon - VS Code Edition
// Start coding with AI assistance!

console.log('ðŸš€ Claude Code Daemon is ready!');

// Example: Create a simple function
function greetUser(name = 'Developer') {
    return \`Hello, \${name}! Welcome to your coding workspace.\`;
}

// Test the function
const message = greetUser('Claude');
console.log(message);

// TODO: Start building amazing things with Claude's help!
`,
                language: 'javascript',
                theme: 'vscode-dark',
                fontSize: 14,
                fontFamily: "'Cascadia Code', 'Fira Code', Consolas, 'Courier New', monospace",
                fontLigatures: true,
                minimap: {
                    enabled: true
                },
                scrollBeyondLastLine: false,
                automaticLayout: true,
                wordWrap: 'on'
            });
        });

        // Initialize Terminal
        document.addEventListener('DOMContentLoaded', function() {
            const term = new Terminal({
                theme: {
                    background: '#0d1117',
                    foreground: '#e6edf3',
                    cursor: '#FFFFFF',
                    selection: '#264F78',
                    black: '#000000',
                    red: '#CD3131',
                    green: '#0DBC79',
                    yellow: '#E5E510',
                    blue: '#2472C8',
                    magenta: '#BC3FBC',
                    cyan: '#11A8CD',
                    white: '#E5E5E5',
                    brightBlack: '#666666',
                    brightRed: '#F14C4C',
                    brightGreen: '#23D18B',
                    brightYellow: '#F5F543',
                    brightBlue: '#3B8EEA',
                    brightMagenta: '#D670D6',
                    brightCyan: '#29B8DB',
                    brightWhite: '#E5E5E5'
                },
                fontFamily: "'Cascadia Code', 'Fira Code', Consolas, monospace",
                fontSize: 13,
                lineHeight: 1.2
            });

            const fitAddon = new FitAddon.FitAddon();
            term.loadAddon(fitAddon);

            term.open(document.getElementById('terminal-container'));
            fitAddon.fit();

            term.writeln('Welcome to Claude Code Daemon Terminal');
            term.writeln('Type "help" for available commands');
            term.write('$ ');

            window.term = term;

            // Handle terminal input
            term.onData(data => {
                if (window.socket) {
                    window.socket.emit('terminal-input', { data });
                }
                term.write(data);
            });

            window.addEventListener('resize', () => {
                fitAddon.fit();
            });
        });

        // Activity Bar Navigation
        document.querySelectorAll('.activity-icon').forEach(icon => {
            icon.addEventListener('click', function() {
                document.querySelectorAll('.activity-icon').forEach(i => i.classList.remove('active'));
                this.classList.add('active');

                const view = this.getAttribute('data-view');
                document.querySelectorAll('.sidebar-view').forEach(v => v.style.display = 'none');
                const targetView = document.getElementById(\`\${view}-view\`);
                if (targetView) {
                    targetView.style.display = 'block';
                }
            });
        });

        // Panel Tab Switching
        document.querySelectorAll('.panel-tab').forEach(tab => {
            tab.addEventListener('click', function() {
                document.querySelectorAll('.panel-tab').forEach(t => t.classList.remove('active'));
                this.classList.add('active');
            });
        });

        // Toggle Panel
        document.getElementById('toggle-panel').addEventListener('click', function() {
            const panel = document.getElementById('panel');
            panel.style.display = panel.style.display === 'none' ? 'flex' : 'none';
            const icon = this.querySelector('i');
            icon.className = panel.style.display === 'none' ? 'codicon codicon-chevron-up' : 'codicon codicon-chevron-down';
        });

        // Initialize Socket Connection
        const socket = io();
        window.socket = socket;

        socket.on('connect', () => {
            console.log('Connected to Claude Code Daemon');
        });

        socket.on('file-tree-update', (data) => {
            updateFileTree(data);
        });

        socket.on('terminal-output', (data) => {
            if (window.term) {
                window.term.write(data);
            }
        });

        // File Tree Functions
        function updateFileTree(files) {
            const treeContainer = document.getElementById('file-tree');
            // Implement file tree rendering
        }

        // File tree item click handlers
        document.querySelectorAll('.file-item').forEach(item => {
            item.addEventListener('click', function() {
                document.querySelectorAll('.file-item').forEach(i => i.classList.remove('selected'));
                this.classList.add('selected');
            });
        });

        // Claude AI Integration
        document.getElementById('send-to-claude').addEventListener('click', function() {
            sendClaudeMessage();
        });

        document.getElementById('claude-input').addEventListener('keydown', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendClaudeMessage();
            }
        });

        function sendClaudeMessage() {
            const input = document.getElementById('claude-input');
            const message = input.value.trim();

            if (message) {
                socket.emit('claude-message', { message });

                const messagesContainer = document.getElementById('claude-messages');
                const messageDiv = document.createElement('div');
                messageDiv.className = 'chat-message user';
                messageDiv.textContent = message;
                messagesContainer.appendChild(messageDiv);
                messagesContainer.scrollTop = messagesContainer.scrollHeight;

                input.value = '';
            }
        }

        socket.on('claude-response', (data) => {
            const messagesContainer = document.getElementById('claude-messages');
            const messageDiv = document.createElement('div');
            messageDiv.className = 'chat-message assistant';
            messageDiv.textContent = data.response;
            messagesContainer.appendChild(messageDiv);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        });

        // Tab functionality
        document.querySelectorAll('.tab-close').forEach(closeBtn => {
            closeBtn.addEventListener('click', function(e) {
                e.stopPropagation();
                const tab = this.closest('.tab');
                tab.remove();
            });
        });
    </script>

    <style>
        /* File tree styling */
        .file-item {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 4px 8px;
            cursor: pointer;
            border-radius: var(--radius-small);
            transition: var(--transition-fast);
        }

        .file-item:hover {
            background: var(--vscode-hover);
        }

        .file-item.selected {
            background: var(--vscode-active);
        }

        .file-item i {
            color: var(--vscode-text-secondary);
        }

        .file-item.folder i {
            color: #dcb67a;
        }

        .file-item span {
            font-size: 13px;
            color: var(--vscode-text);
        }

        /* Enhanced responsiveness */
        @media (max-width: 1024px) {
            .vscode-sidebar {
                width: 250px;
            }
        }

        @media (max-width: 768px) {
            .vscode-sidebar {
                width: 200px;
            }

            .vscode-titlebar .title {
                font-size: 11px;
            }
        }
    </style>
</body>
</html>